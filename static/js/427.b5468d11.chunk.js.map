{"version":3,"file":"static/js/427.b5468d11.chunk.js","mappings":"iQAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iJASVE,EAAmBF,EAAAA,GAAAA,MAAH,6FAMhBG,GAAmBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yaAqBhBK,GAAiBL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,wGAOdO,EAASP,EAAAA,GAAAA,OAAH,klB,mBCjCbQ,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAEHE,QAAQ,2EAAsC,2BAC9CC,WACHN,MAAOG,EAAAA,KAAaH,MAAM,4BAA4BM,WACtDL,SAAUE,EAAAA,KAEPI,IAAI,EAAG,qDACPD,aAGQE,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEZ,cAAeA,EACfa,SARe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BJ,GAASK,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAMKE,iBAAkBb,EAClBc,kBAAkB,EAClBC,gBAAgB,EALlB,UAOE,UAAC5B,EAAD,YACE,UAACG,EAAD,oBAEE,SAACC,EAAD,CAAkByB,KAAK,OAAOnB,KAAK,aAErC,SAACJ,EAAD,CAAgBI,KAAK,OAAOoB,UAAU,OACtC,UAAC3B,EAAD,qBAEE,SAACC,EAAD,CAAkByB,KAAK,QAAQnB,KAAK,cAEtC,SAACJ,EAAD,CAAgBI,KAAK,QAAQoB,UAAU,OAEvC,UAAC3B,EAAD,wBAEE,SAACC,EAAD,CAAkByB,KAAK,WAAWnB,KAAK,iBAEzC,SAACJ,EAAD,CAAgBI,KAAK,WAAWoB,UAAU,OAC1C,SAACtB,EAAD,CAAQqB,KAAK,SAAb,4BAKT,E,UCjEc,SAASE,IACtB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1B,OACE,UAAC,KAAD,YACE,0CACA,SAACf,EAAD,IACCa,IAAS,uBAAIA,MAGnB,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  width: 310px;\n  align-items: flex-end;\n`;\n\nexport const ContactFormLabel = styled.label`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ContactFormInput = styled(Field)`\n  font-family: cursive;\n  height: 30px;\n\n  padding-top: 2px;\n  padding-bottom: 2px;\n  padding-left: 8px;\n  padding-right: 8px;\n\n  border: 1px solid #e0e0e0;\n  outline: none;\n  border-radius: 6px;\n  background: #e0e0e0;\n  box-shadow: inset 11px 11px 23px #b1b1b1, inset -11px -11px 23px #ffffff;\n  outline: none;\n  :hover,\n  :focus {\n    border: 1px solid rgba(33, 33, 33, 0.35);\n  }\n`;\n\nexport const StyledErrorMsg = styled(ErrorMessage)`\n  margin: 0;\n  font-size: 12px;\n  color: #ac3235;\n  align-self: flex-start;\n`;\n\nexport const Button = styled.button`\n  margin-left: 20px;\n  padding: 15px;\n  font-size: 18px;\n\n  border: none;\n  border-radius: 10px;\n\n  color: #010101;\n\n  cursor: pointer;\n  text-decoration: none;\n  outline: none;\n\n  transition: 0.2s ease-in-out;\n\n  background: linear-gradient(145deg, #cacaca, #f0f0f0);\n  box-shadow: 11px 11px 23px #b1b1b1, -11px -11px 23px #ffffff;\n\n  &:hover {\n    opacity: 0.5;\n    color: green;\n  }\n\n  &:active {\n    color: green;\n    opacity: 1;\n    background: #e0e0e0;\n    box-shadow: inset 11px 11px 23px #b1b1b1, inset -11px -11px 23px #ffffff;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  StyledForm,\n  ContactFormLabel,\n  ContactFormInput,\n  StyledErrorMsg,\n  Button,\n} from './RegisterForm.styled';\nimport { Content } from '../Common.styled';\nimport { register } from '../../redux/auth/operations';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(/^[a-zA-ZÀ-ÖÙ-öù-ÿĀ-žḀ-ỿ0-9\\s\\-.]+$/, 'Please enter valid name')\n    .required(),\n  email: yup.string().email('Please enter valid email').required(),\n  password: yup\n    .string()\n    .min(6, 'Password is too short -should be at least 6 chars')\n    .required(),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const HandleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n  return (\n    <Content>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={HandleSubmit}\n        validationSchema={schema}\n        validateOnChange={false}\n        validateOnBlur={true}\n      >\n        <StyledForm>\n          <ContactFormLabel>\n            Name:\n            <ContactFormInput type=\"text\" name=\"name\" />\n          </ContactFormLabel>\n          <StyledErrorMsg name=\"name\" component=\"p\" />\n          <ContactFormLabel>\n            Email:\n            <ContactFormInput type=\"email\" name=\"email\" />\n          </ContactFormLabel>\n          <StyledErrorMsg name=\"email\" component=\"p\" />\n\n          <ContactFormLabel>\n            Password:\n            <ContactFormInput type=\"password\" name=\"password\" />\n          </ContactFormLabel>\n          <StyledErrorMsg name=\"password\" component=\"p\" />\n          <Button type=\"submit\">Register</Button>\n        </StyledForm>\n      </Formik>\n    </Content>\n  );\n};\n","import { Content } from 'components/Common.styled';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { useSelector } from 'react-redux';\nimport { selectError } from 'redux/auth/selectors';\nexport default function Register() {\n  const error = useSelector(selectError);\n  return (\n    <Content>\n      <h2>Registration</h2>\n      <RegisterForm />\n      {error && <b>{error}</b>}\n    </Content>\n  );\n}\n"],"names":["StyledForm","styled","Form","ContactFormLabel","ContactFormInput","Field","StyledErrorMsg","ErrorMessage","Button","initialValues","name","email","password","schema","yup","shape","matches","required","min","RegisterForm","dispatch","useDispatch","onSubmit","values","resetForm","register","validationSchema","validateOnChange","validateOnBlur","type","component","Register","error","useSelector","selectError"],"sourceRoot":""}