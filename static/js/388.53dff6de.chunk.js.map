{"version":3,"file":"static/js/388.53dff6de.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","redux/filter/selectors.js","components/Contact/Contact.Styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.entities;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  width: 310px;\n  margin-bottom: 15px;\n\n  align-items: flex-end;\n\n  margin: 0 auto;\n`;\n\nexport const ContactFormLabel = styled.label`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ContactFormInput = styled(Field)`\n  font-family: cursive;\n  height: 30px;\n\n  padding-top: 2px;\n  padding-bottom: 2px;\n  padding-left: 8px;\n  padding-right: 8px;\n\n  border: 1px solid #e0e0e0;\n  outline: none;\n  border-radius: 6px;\n  background: #e0e0e0;\n  box-shadow: inset 11px 11px 23px #b1b1b1, inset -11px -11px 23px #ffffff;\n  outline: none;\n  :hover,\n  :focus {\n    border: 1px solid rgba(33, 33, 33, 0.35);\n  }\n`;\n\nexport const StyledErrorMsg = styled(ErrorMessage)`\n  margin: 0;\n  font-size: 12px;\n  color: #ac3235;\n  align-self: flex-start;\n`;\n\nexport const Button = styled.button`\n  margin-left: 20px;\n  padding: 15px;\n  font-size: 18px;\n\n  border: none;\n  border-radius: 10px;\n\n  color: #010101;\n\n  cursor: pointer;\n  text-decoration: none;\n  outline: none;\n\n  transition: 0.2s ease-in-out;\n\n  background: linear-gradient(145deg, #cacaca, #f0f0f0);\n  box-shadow: 11px 11px 23px #b1b1b1, -11px -11px 23px #ffffff;\n\n  &:hover {\n    opacity: 0.5;\n    color: green;\n  }\n\n  &:active {\n    color: green;\n    opacity: 1;\n    background: #e0e0e0;\n    box-shadow: inset 11px 11px 23px #b1b1b1, inset -11px -11px 23px #ffffff;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Notify } from 'notiflix';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport {\n  StyledForm,\n  ContactFormLabel,\n  ContactFormInput,\n  StyledErrorMsg,\n  Button,\n} from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nNotify.init({\n  position: 'center-top',\n\n  width: '460px',\n  useIcon: false,\n  fontFamily: 'Garamond',\n  fontSize: '28px',\n  failure: {\n    background: 'transparent',\n    textColor: '#ac3235',\n  },\n});\n\nconst nameRegex = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst numberRegex =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameRegex,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan \"\n    )\n    .required(),\n  number: yup\n    .string()\n    .matches(\n      numberRegex,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const HandleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    if (contacts.some(contact => contact?.name === name)) {\n      return Notify.failure(`${name} is already in contacts`);\n    }\n    resetForm();\n    dispatch(addContact({ name, number }));\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={HandleSubmit}\n      validationSchema={schema}\n      validateOnChange={false}\n      validateOnBlur={false}\n    >\n      <StyledForm>\n        <ContactFormLabel>\n          Name:\n          <ContactFormInput type=\"text\" name=\"name\" />\n        </ContactFormLabel>\n        <StyledErrorMsg name=\"name\" component=\"p\" />\n\n        <ContactFormLabel>\n          Number:\n          <ContactFormInput type=\"tel\" name=\"number\" />\n        </ContactFormLabel>\n        <StyledErrorMsg name=\"number\" component=\"p\" />\n        <Button type=\"submit\">Add contact</Button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledFilter = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 310px;\n  gap: 2px;\n\n  margin: 0 auto;\n`;\n\nexport const Input = styled.input`\n  font-family: cursive;\n  height: 30px;\n\n  padding-top: 2px;\n  padding-bottom: 2px;\n  padding-left: 8px;\n  padding-right: 8px;\n\n  border: 1px solid #e0e0e0;\n  outline: none;\n  border-radius: 6px;\n  background: #e0e0e0;\n  box-shadow: inset 11px 11px 23px #b1b1b1, inset -11px -11px 23px #ffffff;\n  outline: none;\n  :hover,\n  :focus {\n    border: 1px solid rgba(33, 33, 33, 0.35);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { StyledFilter, Input } from './Filter.styled';\nimport { setFilter } from 'redux/filter/slice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const userInput = e.target.value;\n\n    dispatch(setFilter(userInput));\n  };\n\n  return (\n    <StyledFilter>\n      Find contacts by name:\n      <Input type=\"text\" name=\"filter\" onChange={handleFilterChange} />\n    </StyledFilter>\n  );\n};\n","export const selectFilter = state => state.filter.value;\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  max-width: 510px;\n  margin-bottom: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  @media screen and (max-width: 767px) {\n    flex-wrap: wrap;\n  }\n`;\n\nexport const Name = styled.span`\n  font-size: 16px;\n  font-weight: semibold;\n`;\n\nexport const Number = styled.span`\n  font-size: 16px;\n\n  display: flex;\n  flex-grow: 1;\n  align-items: flex-end;\n\n  &::before {\n    content: '';\n    margin-left: 6px;\n    margin-right: 6px;\n    flex-grow: 1;\n    height: 1px;\n    background-color: rgba(157, 164, 189, 0.8);\n  }\n`;\n\nexport const Info = styled.span`\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  width: 40px;\n  height: 20px;\n\n  margin-left: 20px;\n\n  font-size: 18px;\n\n  border: none;\n  border-radius: 10px;\n\n  cursor: pointer;\n\n  outline: none;\n\n  transition: 0.2s ease-in-out;\n\n  background: linear-gradient(145deg, #cacaca, #f0f0f0);\n  box-shadow: 11px 11px 23px #b1b1b1, -11px -11px 23px #ffffff;\n\n  &:hover {\n    opacity: 0.5;\n    color: red;\n  }\n\n  &:active {\n    opacity: 1;\n    background: #e0e0e0;\n    box-shadow: inset 11px 11px 23px #b1b1b1, inset -11px -11px 23px #ffffff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { StyledContainer, Name, Number, Button } from './Contact.Styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { TiDeleteOutline } from 'react-icons/ti';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n  return (\n    <StyledContainer>\n      <Name>{contact.name}: </Name>\n      <Number>{contact.number}</Number>\n      <Button type=\"button\" onClick={handleDelete}>\n        <TiDeleteOutline />\n      </Button>\n    </StyledContainer>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledContactList = styled.ul`\n  margin-top: 25px;\n  padding-left: 0px;\n  list-style: none;\n\n  width: 310px;\n  margin: 0 auto;\n`;\n\nexport const StyledContact = styled.li`\n  margin-bottom: 8px;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { Contact } from '../Contact/Contact';\nimport { StyledContactList, StyledContact } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <StyledContactList>\n      {filteredContacts.map(contact => (\n        <StyledContact key={contact.id}>\n          <Contact contact={contact} key={contact.id} />{' '}\n        </StyledContact>\n      ))}\n    </StyledContactList>\n  );\n};\n","import { Content, MessageContainer } from 'components/Common.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Content>\n      <ContactForm />\n      <Filter />\n      <MessageContainer>\n        {isLoading && <b>Loading contacts...</b>}\n        {error && <b>{error}</b>}\n      </MessageContainer>\n      <ContactList />\n    </Content>\n  );\n}\n"],"names":["selectContacts","state","contacts","entities","selectIsLoading","isLoading","selectError","error","StyledForm","styled","Form","ContactFormLabel","ContactFormInput","Field","StyledErrorMsg","ErrorMessage","Button","initialValues","name","number","Notify","position","width","useIcon","fontFamily","fontSize","failure","background","textColor","schema","yup","shape","matches","required","ContactForm","dispatch","useDispatch","useSelector","onSubmit","values","resetForm","some","contact","addContact","validationSchema","validateOnChange","validateOnBlur","type","component","StyledFilter","Input","Filter","onChange","e","userInput","target","value","setFilter","selectFilter","filter","StyledContainer","Name","Number","Contact","onClick","deleteContact","id","StyledContactList","StyledContact","ContactList","filteredContacts","toLowerCase","includes","map","Contacts","useEffect","fetchContacts"],"sourceRoot":""}